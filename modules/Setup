from distutils.core import setup, Extension
import os
import subprocess

FTT_DIR = os.environ.get('FTT_DIR')
FTT_INCLUDES= ['.', '%s/ftt_lib'%(FTT_DIR,), '%s/include'%(FTT_DIR,)]
FTT_LIBS = ['.', '%s/lib'%(FTT_DIR,), '%s/ftt_lib'%(FTT_DIR,)]

def shell_command2(command):
    pipeObj = subprocess.Popen(command,
                               stdin=subprocess.PIPE,
                               stdout=subprocess.PIPE,
                               stderr=subprocess.PIPE,
                               shell=True,
                               close_fds=True)
    if pipeObj == None:
        return None
    # get stdout and stderr                                                                                                          
    result = pipeObj.communicate()
    rc = [pipeObj.returncode]
    del(pipeObj)
    for r in result:
        rc.append(r)
    return tuple(rc)

MTX_LIB = shell_command2('rpm -ql mtx | grep libmtx.so')[1][:-1].decode("utf-8")
print('MTX_LIB', MTX_LIB)
IPC  = Extension('IPC',
                 sources = ['IPC.c'],
		 extra_compile_args = ['-O3']
		 )
EXfer = Extension('EXfer',
                   #libraries = ['adler32.a'],
                   sources = ['EXfer.c'],
		   extra_compile_args = ['-O3'],
		   extra_objects = ['adler32.a']
		   )
Devcodes = Extension('Devcodes',
                   sources = ['Devcodes.c'])

checksumc = Extension('checksumcmodule',
                   #libraries = ['./adler32.a'],
                   sources = ['checksum_wrap_thread.c'],
		   extra_objects = ['adler32.a'])
mtxc = Extension('mtxcmodule',
                   #libraries = [MTX_LIB],
                   sources = ['mtx_wrap_thread.c'],
		   extra_objects = [MTX_LIB]
)

socket_extc = Extension('socket_extcmodule',
                   sources = ['socket_ext_wrap.c'])

strbufferc = Extension('strbuffercmodule',
                   sources = ['strbuffer_wrap_thread.c'])

ftt2c = Extension('ftt2cmodule',
                    include_dirs = FTT_INCLUDES,
                    library_dirs = FTT_LIBS,
		    libraries = ['ftt'],
                    sources = ['ftt2_wrap_thread.c'])

runonc = Extension('runoncmodule',
                   sources = ['runon_wrap.c', 'runon.c'])

enroutec = Extension('enroutecmodule',
                   sources = ['enroute_wrap.c', 'enroute.c'])
Interfaces = Extension('Interfaces',
                   sources = ['Interfaces.c'])

setup (name = 'EnstoreExtensions',
       version = '1.0',
       description = 'This is a enstore pythonc extensions package',
       author = 'Alexander N. Moibenko',
       author_email = 'moibenko@jinr.ru',

#       ext_modules = [EXfer, Devcodes, checksumc, mtxc, socket_extc, strbufferc, ftt2c, runonc, enroutec, Interfaces]
       ext_modules = [EXfer, Devcodes, checksumc, mtxc, socket_extc, strbufferc, ftt2c, runonc, enroutec, Interfaces]
       )

