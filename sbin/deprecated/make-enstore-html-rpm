#!/bin/sh

###############################################################################
# 
# $Id$
# $Author$
#
# Author Dmitry Litvintsev (litvinse@fnal.gov) 06/12/07
# 
# Script: make-enstore-html-rpm   major_version  minor_version release_number
#
##############################################################################

#=======================================================================
# Process arguments
# REQUIRES: major version and minor version as arguments
#=======================================================================
if [ "$#" != 3 ]
then
  echo "`basename $0` : USAGE: Must supply exactly three integer arguments."
  echo "Usage:  `basename $0` major_version  minor_version release_number"
  exit 2
fi

#=======================================================================
# Define version-dependent names
#=======================================================================
majorv="${1}"
minorv="${2}"
release="${3}"
version="$majorv"."$minorv"
versdot="$majorv"."$minorv"
package=enstore_html-"$versdot"
random_num=$$${RANDOM}
tmpdir=/tmp/${random_num}
startdir=${PWD}
#=======================================================================
# Check out what is needed
#=======================================================================
mkdir ${tmpdir}
if [ $? != 0 ] ; then
    echo  "could not create temp directory $tmpdir" >&2
    exit 1
fi

#======================================================================
# Cleanup function
#======================================================================
restore_rpmmacros=false
restore_rpmdir=false
rpmmacros=${HOME}/.rpmmacros
rpmdir=${HOME}/rpmbuild
rpmmacrossave=${HOME}/.rpmmacros.${random_num}
rpmdirsave=${HOME}/rpmbuild.${random_num}

cleanup() {
  rm -rf $tmpdir 
    if [ "$restore_rpmmacros" = "true" ] ; then
      rm -f ${rpmmacros}
      mv  $rpmmacrossave ${rpmmacros}
    fi    
    if [ "$restore_rpmdir" = "true" ] ; then
      rm -rf ${rpmdir}
      mv ${rpmdirsave} ${rpmdir}
    fi
  
}
# add cleanup
trap cleanup 0
trap "exit 1" 1 2 3 15

cd ${tmpdir}
export CVSROOT=hppccvs@cdcvs.fnal.gov:/cvs/hppc

cvs co -r production enstore 
cd ${tmpdir}
mkdir "$package"
cp enstore/etc/*.gif "$package"
cp enstore/etc/*.html "$package"
cp enstore/sbin/make_enstore_system.py "$package"
cp enstore/src/web_server.py "$package"
cp enstore/www/conf/httpd.conf "$package"
cp enstore/sbin/deploy_enstore_html "$package"
cp enstore/sbin/undeploy_enstore_html "$package"
cp enstore/src/*cgi*py "$package"
cp enstore/sbin/active_volumes.sh "$package"


#======================================================================
# save original .rpmmacros and populate the new one
#======================================================================
if [ -e ${rpmmacros} ] ; then
  mv ${rpmmacros} ${rpmmacrossave}
  restore_rpmmacros=true
fi
echo '%_topdir               %(echo $HOME)/rpmbuild' >${rpmmacros}
echo '%debug_package         %{nil}' >>${rpmmacros}

#======================================================================
# save original rpmbuild and populate the new one
#======================================================================
if [ -e ${rpmdir} ] ; then
  mv ${rpmdir} ${rpmdirsave}
  restore_rpmdir=true
fi
mkdir -p  ${rpmdir}/{SOURCES,SPECS,BUILD,SRPMS,RPMS/{i386,i586,i686,athlon,noarch}}
rpmbase=${rpmdir}
specbase=enstore_html-base.spec
specfile=enstore_html-"$versdot".spec

#=======================================================================
# Populate the redhat RPM area with enstore_html stuff for a binary build
#=======================================================================
mkdir -p $rpmbase/BUILD/"$package"/opt/enstore_html
cp -r "$package" $rpmbase/BUILD/"$package"/opt/enstore_html

#=======================================================================
# Create the spec file on the fly, to include the version numbers
#=======================================================================
rm -f $rpmbase/SPECS/"${specfile}" 
echo "%define MajVersion ${majorv}"  > $rpmbase/SPECS/"${specfile}"
echo "%define MinVersion ${minorv}"  >> $rpmbase/SPECS/"${specfile}"
echo "Release: ${release}" >> $rpmbase/SPECS/"${specfile}"
cat enstore/spec/"${specbase}" >> $rpmbase/SPECS/"${specfile}"

#=======================================================================
# Clean out any old RPMs for this package
#=======================================================================
rm -f $rpmbase/RPMS/i386/"$package"-*.i386.rpm
rm -f $rpmbase/RPMS/x86_64/"$package"-*.x86_64.rpm
rm -f $rpmbase/RPMS/noarch/"$package"-*.noarch.rpm

#=======================================================================
# Do the binary build, copy back the result to original user area
#=======================================================================
rpmbuild -bb -vv $rpmbase/SPECS/"$package".spec
#cp $rpmbase/RPMS/i386/"$package"-"$release".i386.rpm ${startdir}
#cp $rpmbase/RPMS/x86_64/"$package"-"$release".x86_64.rpm ${startdir}
cp $rpmbase/RPMS/noarch/"$package"-"$release".noarch.rpm ${startdir}

#=======================================================================
# Clean-up? will be cause by exit (trap 0)
#=======================================================================


########################################################################
# The End
########################################################################
